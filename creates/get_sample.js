const perform = (z, bundle) => {
  var sample_id = bundle.inputData.sample_id;
  const options = {
    url: 'https://api.confidentcannabis.com/v0/sample/' + sample_id,
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      Accept: 'application/json',
      // 'X-SIGNED': bundle.authData.signed,
      'X-ConfidentCannabis-APIKey': bundle.authData.api_key,
    },
    params: {},
  };

  return z.request(options).then((response) => {
    response.throwForStatus();
    const results = response.json;

    // You can do any parsing you need for results here before returning them

    return results;
  });
};

module.exports = {
  operation: {
    perform: perform,
    inputFields: [
      {
        key: 'sample_id',
        label: 'Sample ID',
        type: 'string',
        dynamic: 'get_samples.id.sample_name',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
    ],
    sample: {
      sample: {
        batch_id: 'asd',
        batch_size: 1,
        batch_size_unit: 'g',
        client_id: 3559,
        coa: null,
        coa_additions: [],
        coa_draft: null,
        container_description: 'asd',
        cover_image: null,
        custom_field: null,
        date_samples_collected: '2020-07-02',
        harvest_id: 'asd',
        has_coa: false,
        has_coa_draft: false,
        has_lab_data: false,
        has_lab_data_draft: false,
        id: '2007ITL0002.0002',
        images: [],
        initial_weight: null,
        initial_weight_unit: 'g',
        lab: { id: 3, name: 'Internal Testing Lab' },
        last_modified: '2020-07-03T01:46:34.194421',
        lims_id: null,
        logs: [],
        lot_id: null,
        lot_size: null,
        lot_size_unit: 'g',
        manifest_id: 'asd',
        notes: 'asd',
        order_id: '2007ITL0002',
        order_lims_id: null,
        order_status_id: 2,
        order_status_name: 'Placed',
        production_date: '2020-07-02',
        production_method_id: 1,
        production_method_name: 'Indoor',
        production_run_id: null,
        production_run_size: null,
        production_run_size_unit: 'g',
        public_url:
          'https://orders.confidentcannabis.com/report/public/sample/7298236d-5f3a-4e0d-aac7-a59e15310f3c',
        regulator_batch_id: 'asd',
        regulator_batch_id2: null,
        regulator_lot_id: null,
        regulator_sample_id: 'asd',
        regulator_sample_id2: null,
        regulatory_category_id: null,
        sample_category_id: 1,
        sample_category_name: 'Plant',
        sample_name: 'hannabis 007',
        sample_type_id: 1,
        sample_type_name: 'Flower - Cured',
        servings_per_container: 1,
        solvents_used: null,
        strain_name: 'hannabis',
        test_packages: [{ id: 5686, name: 'Everything except Ratio' }],
        test_types: [
          { abbreviation: 'OTHER', id: 17, name: 'Other' },
          { abbreviation: 'MIC-A', id: 13, name: 'Additional Microbials' },
          { abbreviation: 'MIC-R', id: 4, name: 'Required Microbials' },
          { abbreviation: 'HVY', id: 7, name: 'Heavy Metals' },
          { abbreviation: 'DNA', id: 8, name: 'DNA' },
          { abbreviation: 'SOL-A', id: 14, name: 'Additional Solvents' },
          { abbreviation: 'SOL-R', id: 3, name: 'Required Solvents' },
          { abbreviation: 'FMI', id: 16, name: 'Foreign Matter' },
          { abbreviation: 'WA', id: 11, name: 'Water Activity' },
          { abbreviation: 'MYC', id: 6, name: 'Mycotoxins' },
          { abbreviation: 'PES-A', id: 12, name: 'Additional Pesticides' },
          { abbreviation: 'PES-R', id: 5, name: 'Required Pesticides' },
          { abbreviation: 'H20', id: 10, name: 'Moisture' },
          { abbreviation: 'CAN', id: 1, name: 'Cannabinoids' },
          { abbreviation: 'TER', id: 2, name: 'Terpenes' },
          { abbreviation: 'HOM', id: 9, name: 'Homogeneity' },
        ],
        unit_description: 'asd',
        units_per_serving: 1,
        weight_on_hand: null,
        weight_on_hand_unit: 'g',
      },
      success: true,
    },
    outputFields: [
      { key: 'sample__batch_id' },
      { key: 'sample__batch_size' },
      { key: 'sample__batch_size_unit' },
      { key: 'sample__client_id' },
      { key: 'sample__coa' },
      { key: 'sample__coa_draft' },
      { key: 'sample__container_description' },
      { key: 'sample__cover_image' },
      { key: 'sample__custom_field' },
      { key: 'sample__date_samples_collected' },
      { key: 'sample__harvest_id' },
      { key: 'sample__has_coa' },
      { key: 'sample__has_coa_draft' },
      { key: 'sample__has_lab_data' },
      { key: 'sample__has_lab_data_draft' },
      { key: 'sample__id' },
      { key: 'sample__initial_weight' },
      { key: 'sample__initial_weight_unit' },
      { key: 'sample__lab__id' },
      { key: 'sample__lab__name' },
      { key: 'sample__last_modified' },
      { key: 'sample__lims_id' },
      { key: 'sample__lot_id' },
      { key: 'sample__lot_size' },
      { key: 'sample__lot_size_unit' },
      { key: 'sample__manifest_id' },
      { key: 'sample__notes' },
      { key: 'sample__order_id' },
      { key: 'sample__order_lims_id' },
      { key: 'sample__order_status_id' },
      { key: 'sample__order_status_name' },
      { key: 'sample__production_date' },
      { key: 'sample__production_method_id' },
      { key: 'sample__production_method_name' },
      { key: 'sample__production_run_id' },
      { key: 'sample__production_run_size' },
      { key: 'sample__production_run_size_unit' },
      { key: 'sample__public_url' },
      { key: 'sample__regulator_batch_id' },
      { key: 'sample__regulator_batch_id2' },
      { key: 'sample__regulator_lot_id' },
      { key: 'sample__regulator_sample_id' },
      { key: 'sample__regulator_sample_id2' },
      { key: 'sample__regulatory_category_id' },
      { key: 'sample__sample_category_id' },
      { key: 'sample__sample_category_name' },
      { key: 'sample__sample_name' },
      { key: 'sample__sample_type_id' },
      { key: 'sample__sample_type_name' },
      { key: 'sample__servings_per_container' },
      { key: 'sample__solvents_used' },
      { key: 'sample__strain_name' },
      { key: 'sample__test_packages[]id' },
      { key: 'sample__test_packages[]name' },
      { key: 'sample__test_types[]abbreviation' },
      { key: 'sample__test_types[]id' },
      { key: 'sample__test_types[]name' },
      { key: 'sample__unit_description' },
      { key: 'sample__units_per_serving' },
      { key: 'sample__weight_on_hand' },
      { key: 'sample__weight_on_hand_unit' },
      { key: 'success' },
    ],
  },
  key: 'get_sample',
  noun: 'Sample',
  display: {
    label: 'Find Sample by ID',
    description: 'Get the sample on the basis of sample ID',
    hidden: false,
    important: false,
  },
};
