const perform = (z, bundle) => {
  const options = {
    url: 'https://api.confidentcannabis.com/v0/order',
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
      Accept: 'application/json',
      // 'X-SIGNED': bundle.authData.signed,
      'X-ConfidentCannabis-APIKey': bundle.authData.api_key,
    },
    params: {},
    body: {
      order: JSON.stringify({
        client_id: bundle.inputData.client_id,
        client_license_id: bundle.inputData.client_license_id,
        lab_license_id: bundle.inputData.lab_license_id,
        address_id: bundle.inputData.address_id,
        pickup: bundle.inputData.pickup,
        price_adjustment: bundle.inputData.price_adjustment,
        send_client_email: bundle.inputData.send_client_email,
        lims_id: bundle.inputData.lims_id,
        status_id: bundle.inputData.status_id,
        secondary_client_name: bundle.inputData.secondary_client_name,
        secondary_client_type: bundle.inputData.secondary_client_type,
        secondary_client_address: bundle.inputData.secondary_client_address,
        secondary_client_license: bundle.inputData.secondary_client_license,
        samples: [
          {
            name: bundle.inputData.samples_name,
            strain_name: bundle.inputData.samples_strain_name,
            type_id: bundle.inputData.samples_type_id,
            production_method_id: 3 /*bundle.inputData.samples_production_method_id*/,
            classification_id: bundle.inputData.samples_classification_id,
            test_package_ids: [bundle.inputData.samples_test_package_ids],
            notes: bundle.inputData.samples_notes,
            lims_id: bundle.inputData.samples_lims_id,
            production_date: bundle.inputData.samples_production_date,
            date_samples_collected:
              bundle.inputData.samples_date_samples_collected,
            batch_id: bundle.inputData.samples_batch_id,
            batch_size: bundle.inputData.samples_batch_size,
            batch_size_unit: bundle.inputData.samples_batch_size_unit,
            lot_id: bundle.inputData.samples_lot_id,
            lot_size: bundle.inputData.samples_lot_size,
            lot_size_unit: bundle.inputData.samples_lot_size_unit,
            production_run_id: bundle.inputData.samples_production_run_id,
            production_run_size: bundle.inputData.samples_production_run_size,
            production_run_size_unit:
              bundle.inputData.samples_production_run_size_unit,
            manifest_id: bundle.inputData.samples_manifest_id,
            harvest_id: bundle.inputData.samples_,
            regulator_sample_id: bundle.inputData.samples_harvest_id,
            regulator_batch_id: bundle.inputData.samples_regulator_batch_id,
            regulator_lot_id: bundle.inputData.samples_regulator_lot_id,
          },
        ],
      }),
    },
  };

  return z.request(options).then((response) => {
    response.throwForStatus();
    const results = response.json;

    // You can do any parsing you need for results here before returning them

    return results;
  });
};

module.exports = {
  operation: {
    perform: perform,
    inputFields: [
      {
        key: 'client_id',
        label: 'Client ID',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'client_license_id',
        label: 'Client License ID',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'lab_license_id',
        label: 'Lab License ID',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'address_id',
        label: 'Address ID',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'pickup',
        label: 'Pickup',
        type: 'boolean',
        choices: ['Yes', 'No'],
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'price_adjustment',
        label: 'Price Adjustment',
        type: 'string',
        helpText: 'Discount or Additional Fees',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'send_client_email',
        label: 'Send Client Email',
        type: 'boolean',
        choices: ['Yes', 'No'],
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'lims_id',
        label: 'Internal Tracking ID',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'status_id',
        label: 'Status ID',
        type: 'string',
        choices: {
          '0': 'Canceled',
          '2': 'Placed',
          '3': 'In Progress',
          '4': 'Completed',
        },
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'secondary_client_name',
        label: 'Secondary Client Name',
        type: 'string',
        helpText: 'Company name for secondary client',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'secondary_client_type',
        label: 'Secondary Client Type',
        type: 'string',
        choices: { '1': 'producer', '2': 'distributer' },
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'secondary_client_address',
        label: 'Secondary Client Address',
        type: 'string',
        helpText: 'Full address string for secondary client',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'secondary_client_license',
        label: 'Secondary Client License',
        type: 'string',
        helpText: 'License used by secondary client for order transaction',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_name',
        label: 'Samples Name',
        type: 'string',
        helpText: 'Product name for this sample',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_strain_name',
        label: 'Samples Strain Name',
        type: 'string',
        helpText: 'Name of the sample strain',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_type_id',
        label: 'Samples Type ID',
        type: 'string',
        dynamic: 'get_sample_types.id.name',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_classification_id',
        label: 'Samples Classification ID',
        type: 'string',
        dynamic: 'sample_classifications.id.name',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_test_package_ids',
        label: 'Samples Test Package IDs',
        type: 'string',
        helpText:
          'List of IDs (comma separated) for the test packages ordered for this sample',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_notes',
        label: 'Samples Notes',
        type: 'string',
        helpText: 'Additional notes about this sample',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_lims_id',
        label: 'Samples Internal tracking ID',
        type: 'string',
        helpText: 'Internal tracking ID for this sample',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_production_date',
        label: 'Samples Production Date',
        type: 'string',
        helpText:
          'Date only - This is the date the sample/product was harvested/created',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_date_samples_collected',
        label: 'Samples Date Samples Collected',
        type: 'string',
        helpText: 'Date only - This is the date the sample was collected',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_batch_id',
        label: 'Samples Batch ID',
        type: 'string',
        helpText: 'Batch Identifier for Samples',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_batch_size',
        label: 'Samples Batch Size',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_batch_size_unit',
        label: 'Samples Batch Size Unit',
        type: 'string',
        helpText:
          "'g' for grams, 'units' for units, or 'lb' for pounds. Defaults to 'g'",
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_lot_id',
        label: 'Samples lot_id',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_lot_size',
        label: 'Samples lot_size',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_lot_size_unit',
        label: 'Samples lot_size Unit',
        type: 'string',
        helpText:
          "'g' for grams, 'units' for units, or 'lb' for pounds. Defaults to 'g'",
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_production_run_id',
        label: 'Samples Production Run ID',
        type: 'string',
        helpText: 'Production run identifier',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_production_run_size',
        label: 'Samples Production Run Size',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_production_run_size_unit',
        label: 'Samples Production Run Size Unit',
        type: 'string',
        helpText:
          "'g' for grams, 'units' for units, or 'lb' for pounds. Defaults to 'g'",
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_manifest_id',
        label: 'Samples Manifest ID',
        type: 'string',
        helpText: 'Manifest identifier, often for seed to sale systems',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_harvest_id',
        label: 'Samples Harvest ID',
        type: 'string',
        helpText: 'Harvest identifier, often for seed to sale systems',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_regulator_sample_id',
        label: 'Samples Regulator Sample ID',
        type: 'string',
        helpText: 'Seed to sale tracking ID for this sample',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_regulator_batch_id',
        label: 'Samples Regulator Batch ID',
        type: 'string',
        helpText: 'Seed to sale batch ID for this sample',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'samples_regulator_lot_id',
        label: 'Samples Regulator Lot ID',
        type: 'string',
        helpText: 'Seed to sale lot ID for this sample',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
    ],
  },
  key: 'create_new_order',
  noun: 'Order',
  display: {
    label: 'Create Order',
    description: 'This will create new order',
    hidden: false,
    important: true,
  },
};
